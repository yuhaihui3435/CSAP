package com.yhh.csap.admin.model;

import cn.hutool.core.util.StrUtil;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.ehcache.CacheKit;
import com.yhh.csap.Consts;
import com.yhh.csap.admin.model.base.BaseContent;
import com.yhh.csap.kits.DateKit;

import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Content extends BaseContent<Content> {
	public static final Content dao = new Content().dao();

	public String getCAtTxt(){
		return getCAt()==null?"": DateKit.dateToStr(getCAt(),DateKit.STR_DATEFORMATE);
	}
	public String getPAtTxt(){
		return getPAt()==null?"": DateKit.dateToStr(getPAt(),DateKit.STR_DATEFORMATE);
	}

	public String getAuthor(){
		return getUserid()==null?"":User.dao.findById(getUserid()).getNickname();
	}

	public List<Taxonomy> getTaxList(){
		return Taxonomy.dao.findTaxsByCId(getId());
	}

	public String getThumbnailImgUrl(){
		return CacheKit.get(Consts.CACHE_NAMES.paramCache.name(),"qn_url")+getThumbnail();
	}

	public List<Content> findByTextAndModule(String text,String module,boolean ifTop,int limit){
		StringBuilder sql=new StringBuilder();
		sql.append("select sc.* from  s_content sc left join s_mapping sm on sc.id=sm.cid left join s_taxonomy st on sm.tid=st.id where sc.dAt is null and st.module=? and sc.flag='00' and st.text=?");
		if(ifTop){
			sql.append(" and top ='0' ");
		}
		sql.append("  order by sc.pAt desc");
		if(limit>0){
			sql.append(" limit "+limit);
		}
		return Content.dao.find(sql.toString(),module,text);
	}

	public Page<Content> pageByTextAndModule(int pn,int ps,String text,String module,String searchKey){
		StringBuilder sql=new StringBuilder();
		sql.append(" from  s_content sc left join s_mapping sm on sc.id=sm.cid left join s_taxonomy st on sm.tid=st.id left join s_user su on sc.userid=su.id where sc.dAt is null and st.module=? and sc.flag='00' and st.text=?");
		if(StrUtil.isNotBlank(searchKey)){
			sql.append(" and (sc.title like  CONCAT('%',?,'%') or su.nickname like CONCAT('%',?,'%'))");
			sql.append("  order by sc.pAt desc");
			return Content.dao.paginate(pn,ps,"select sc.*",sql.toString(),module,text,searchKey,searchKey);
		}else{
			sql.append("  order by sc.pAt desc");
			return Content.dao.paginate(pn,ps,"select sc.*",sql.toString(),module,text);
		}
	}



	@Override
	public boolean equals(Object obj) {
		if (!(obj instanceof Content)) {
			return false;
		}
		Content c = (Content) obj;
		return this.getId().equals(c.getId());
	}

	@Override
	public int hashCode() {
		return getId().hashCode();
	}

	@Override
	public String getTableName() {
		return "s_content";
	}
}
